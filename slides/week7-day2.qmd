---
title: "Confidence Intervals -- Real Life Sampling Distributions"
format: 
  revealjs:
    self-contained: true
editor: visual
---

```{r set-up}
library(tidyverse)
library(infer)
library(scales)
library(stringr)
library(palmerpenguins)
```


::: {style="font-size: 4em; color: #000000;"}
What if I only have one sample?
:::


## 

::: {style="font-size: 2em; color: #000000;"}
Approximate the variability you'd expect to see in other samples!
:::

. . .

<center>
::: {style="font-size: 3em; color: #0F4C81;"}
**Bootstrapping!**
:::

##

::: {style="font-size: 2em; color: #000000;"}
A Bootstrap Resample
:::

. . .

- Assumes the original sample is "representative" of observations in the
population. 

. . .

- Uses the original sample to generate new samples that might have occurred with additional sampling. 

</br>

. . .

::: {style="font-size: 1em; color: #0F4C81;"}
We can use the statistics from these bootstrap samples to approximate
the true sampling distribution!
:::

##  {background-color="#B6CADA"}

::: {style="font-size: 5em; color: #000000;"}
Why???
:::

## 

::: {style="font-size: 2em; color: #000000;"}
Estimating a population parameter
:::


. . .

- We are interested in knowing how a statistic varies from sample to 
sample.

. . .

- Knowing a statistic's behavior helps us make better / more informed
decisions!

. . .

- This helps us estimate what values are more or less likely for the population parameter to have.


##  {background-color="#B6CADA"}

::: {style="font-size: 2em; color: #000000;"}
Confidence Intervals
:::

. . .

> Capture a range of plausible values for the population parameter.

. . .

</br>

> Are more likely to capture the population parameter than a *point
estimate*.

##

::: {style="font-size: 2em; color: #000000;"}
Using bootstrap resamples to generate a confidence interval
:::

. . .

From your original sample, resample with replacement the same number of times as your original sample. 

. . .

<center>
::: {style="font-size: 1em; color: #0F4C81;"}
This is your bootstrap resample.
:::

</center>

. . .

Repeat this process many, many times. 

. . .

Calculate a numerical summary (e.g., mean, median) for each bootstrap 
resample. 

<center>
::: {style="font-size: 1em; color: #0F4C81;"}
These are your bootstrap statistics
:::
</center>

##

::: {style="font-size: 2em; color: #000000;"}
Bootstrap Distribution
:::

. . .

> *definition*: a distribution of the **bootstrap statistics** from every **bootstrap resample**

. . .

</br> 

Displays the variability in the statistic that could have happened with 
repeated sampling.

. . .

::: {style="font-size: 1em; color: #0F4C81;"}
Approximates the true sampling distribution!
:::

##  {background-color="#B6CADA"}

```{r bootstraps}
#| cache: true
boot1 <- penguins %>%
  specify(response = bill_length_mm, 
          explanatory = body_mass_g) %>% 
  generate(reps = 5000, type = "bootstrap") %>% 
  calculate(stat = "slope") 

boot1_CI <- get_confidence_interval(boot1, 
                                    level = 0.95, 
                                    type = "percentile") 
```

::: {style="font-size: 3em; color: #000000;"}
Confidence Interval
:::


**Goal**: Capture a range of plausible values for the population parameter.

##

::: {style="font-size: 2em; color: #000000;"}
How do I get this plausible range of values?
:::
 
. . .

</br>

<center>
::: {style="font-size: 2em; color: #0F4C81;"}
Bootstrapping!
:::

##

::: {style="font-size: 2em; color: #000000;"}
Penguins!
:::

::: columns
::: {.column width="45%"}
![](images/adelie_penguin.jpg)
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
![](images/chinstrap_penguin.jpeg)
:::
:::

##

::: {style="font-size: 2em; color: #000000;"}
Statistic: $\beta_1$
:::

::: columns
::: {.column width="70%"}
```{r scatterplot}
#| message: false
#| echo: false
ggplot(data = penguins, 
       mapping = aes(y = bill_length_mm, x = body_mass_g)) + 
  geom_point() +
  geom_smooth(method = "lm") + 
  labs(y = "Bill Length (mm)",
       x = "Body Mass (g)") +
  theme_bw() + 
  theme(axis.title.x = element_text(size = 18), 
        axis.title.y = element_text(size = 18), 
        axis.text.x = element_text(size = 14), 
        axis.text.y = element_text(size = 14)
        )
```
:::

::: {.column width="5%"}
:::

::: {.column width="25%"}
The relationship between penguin's bill length and body mass for **all** penguins in the Palmer Archipelago
:::
:::

##

::: {style="font-size: 2em; color: #000000;"}
Generating a bootstrap resample
:::

. . .

__Step 1:__ `specify()` your response and explanatory variables

. . .

__Step 2:__ `generate()` bootstrap resamples

. . .

__Step 3:__ `calculate()` the statistic of interest

##

::: {style="font-size: 2em; color: #000000;"}
Declare your variables!
:::

![](images/specify_scatterplot.jpg)

```{r specify}
#| eval: false
#| echo: true
#| code-line-numbers: "|2"

penguins %>% 
  specify(response = bill_length_mm, explanatory = body_mass_g)
```

##

::: {style="font-size: 2em; color: #000000;"}
Generate your resamples!
:::

```{r generate, echo = FALSE, eval = FALSE}
#| echo: true
#| eval: false
#| code-line-numbers: "|4"
penguins %>% 
  specify(response = bill_length_mm, 
          explanatory = body_mass_g) %>% 
  generate(reps = 1, type = "bootstrap")
```

</br>

. . .

`reps` -- the number of resamples you want to generate

`"bootstrap"` -- the method that should be used to generate the new samples

##  {background-color="#B6CADA"}

::: {style="font-size: 3em; color: #000000;"}
Your turn!
:::

. . .

</br>

Why do we resample *with replacement* when creating a bootstrap
distribution?

</br>

When we resample with replacement from our original sample what
are we assuming about our sample?

##

::: {style="font-size: 2em; color: #000000;"}
Calculate your statistics!
:::

```{r calculate}
#| echo: true
#| eval: false
#| code-line-numbers: "|6"
penguins %>% 
  specify(response = bill_length_mm, 
          explanatory = body_mass_g) %>% 
  generate(reps = 1, 
           type = "bootstrap") %>% 
  calculate(stat = "slope")
```

</br>

. . .

`"slope"` -- the `stat`istic of interest

##  {background-color="#B6CADA"}

::: {style="font-size: 2em; color: #000000;"}
The final product
:::

```{r bootstrap-viz}
#| fig-align: center
#| echo: true

visualize(boot1) + 
  labs(title = "Bootstrap Distribution of 5,000 reps", 
       x = "Slope Statistic")
```

. . .

What does one dot / point on a bootstrap distribution represent?

##

::: {style="font-size: 2em; color: #000000;"}
A plausible range of values for: $\beta_1$
:::
 
```{r ci-viz}
#| echo: true
#| output-location: slide

visualise(boot1) +
  shade_confidence_interval(endpoints = boot1_CI, 
                            color = "red", fill = "pink") +  
  labs(title = "Bootstrap Distribution of 5,000 reps", 
       x = "Slope Statistic")
```

##

::: {style="font-size: 2em; color: #000000;"}
The 95% confidence interval is...
:::

```{r ci}
#| eval: false
#| echo: true
get_confidence_interval(boot1, 
                        level = 0.95, 
                        type = "percentile")
```

</br>

```{r ci-table}
get_confidence_interval(boot1, 
                        level = 0.95, 
                        type = "percentile") %>% 
  mutate(lower_ci = round(lower_ci, 5), 
         upper_ci = round(upper_ci, 5)) %>% 
  knitr::kable(col.names = c("Lower Bound", "Upper Bound")) %>% 
  kableExtra::kable_styling()

```

. . .

</br>

**What do we hope is captured by this interval?**

## 

::: {style="font-size: 2em; color: #000000;"}
How do we interpret this interval?
:::

. . .

> "We are 95% confident the slope of the relationship between bill length and body mass for all penguins in the Palmer Archipelago is between 0.00355 and 0.00453

. . .

**What does it mean to be 95% confident?**

##  {background-color="#B6CADA"}

::: {style="font-size: 2em; color: #000000;"}
Classic interpretation mistakes
:::

. . .

</br> 

> "95% of the time the population parameter would fall between 0.00355 and 0.00453."

</br>

. . .

> "We are 95% confident the sample statistic is in our interval." 

